@article{Theodoropoulos2011,
abstract = {The concept of technical debt provides an excellent tool for describing technology gaps in terms any stakeholder can understand. The technical debt metaphor was pioneered by the software development community and describes technical challenges in that context very well. However, establishing a definitional framework which describes issues affecting quality more broadly will better align to stakeholder perspectives. Building on the existing concept in this way will enable technology stakeholders by providing a centralized technical debt model. The metaphor can then be used to consistently describe quality challenges anywhere within the technical environment. This paper lays the foundation for this conceptual model by proposing a definitional framework that describes how technology gaps affect all aspects of quality.},
author = {Theodoropoulos, Ted and Hofberg, Mark and Kern, Daniel},
doi = {10.1145/1985362.1985373},
file = {:C$\backslash$:/Users/ovidi/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Theodoropoulos, Hofberg, Kern - 2011 - Technical Debt from the Stakeholder Perspective.pdf:pdf},
isbn = {9781450305860},
issn = {02705257},
journal = {Proceedings of the 2nd working on Managing Technical Debt},
keywords = {governance,risk management,software quality,technical debt},
pages = {43},
title = {{Technical Debt from the Stakeholder Perspective}},
url = {http://dl.acm.org/citation.cfm?id=1985362.1985373},
year = {2011}
},
@article{Letouzey2012,
abstract = {This paper presents the SQALE (Software Quality Assessment Based on Lifecycle Expectations) method. We describe its Quality Model and Analysis Model which is used to estimate the Quality and the Technical Debt of an application source code. We provide recommendations and guidelines for using the SQALE indicators in order to analyse the structure and the impact of the Technical Debt.},
author = {Letouzey, Jean Louis},
doi = {10.1109/MTD.2012.6225997},
file = {:C$\backslash$:/Users/ovidi/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Letouzey - 2012 - The SQALE method for evaluating technical debt.pdf:pdf},
isbn = {9781467317498},
journal = {2012 3rd International Workshop on Managing Technical Debt, MTD 2012 - Proceedings},
keywords = {SQALE,Technical Debt,analysis model,quality,quality model,source code},
pages = {31--36},
title = {{The SQALE method for evaluating technical debt}},
year = {2012}
},
@article{Klinger2011,
abstract = {Technical debt is a term that has been used to describe the increased cost of changing or maintaining a system due to expedient shortcuts taken during its development. Much of the research on technical debt has focused on decisions made by project architects and individual developers who choose to trade off short-term gain for a longer-term cost. However, in the context of enterprise software development, such a model may be too narrow. We explore the premise that technical debt within the enterprise should be viewed as a tool similar to financial leverage, allowing the organization to incur debt to pursue options that it couldn't otherwise afford. We test this premise by interviewing a set of experienced architects to understand how decisions to acquire technical debt are made within an enterprise, and to what extent the acquisition of technical debt provides leverage. We find that in many cases, the decision to acquire technical debt is not made by technical architects, but rather by non-technical stakeholders who cause the project to acquire new technical debt or discover existing technical debt that wasn't previously visible. We conclude with some preliminary observations and recommendations for organizations to better manage technical debt in the presence of some enterprise-scale circumstances.},
author = {Klinger, Tim and Tarr, Peri and Wagstrom, Patrick and Williams, Clay},
doi = {10.1145/1985362.1985371},
file = {:C$\backslash$:/Users/ovidi/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Klinger et al. - 2011 - An enterprise perspective on technical debt.pdf:pdf},
isbn = {9781450305860},
issn = {02705257},
journal = {Proceeding of the 2nd working on Managing technical debt - MTD '11},
keywords = {extended stakeholders,leverage,technical debt},
pages = {35},
title = {{An enterprise perspective on technical debt}},
url = {http://dl.acm.org/citation.cfm?id=1985362.1985371},
year = {2011}
},
@article{Zazworka2011,
abstract = {Technical debt is a metaphor describing situations where developers accept sacrifices in one dimension of development (e.g. software quality) in order to optimize another dimension (e.g. implementing necessary features before a deadline). Approaches, such as code smell detection, have been developed to identify particular kinds of debt, e.g. design debt. What has not yet been understood is the impact design debt has on the quality of a software product. Answering this question is important for understanding how growing debt affects a software product and how it slows down development, e.g. though introducing rework such as fixing bugs. In this case study we investigate how design debt, in the form of god classes, affects the maintainability and correctness of software products by studying two sample applications of a small-size software development company. The results show that god classes are changed more often and contain more defects than non-god classes. This result complements findings of earlier research and suggests that technical debt has a negative impact on software quality, and should therefore be identified and managed closely in the development process.},
author = {Zazworka, Nico and Shaw, Michele a. and Shull, Forrest and Seaman, Carolyn},
doi = {10.1145/1985362.1985366},
file = {:C$\backslash$:/Users/ovidi/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Zazworka et al. - 2011 - Investigating the Impact of Design Debt on Software Quality.pdf:pdf},
isbn = {9781450305860},
issn = {02705257},
journal = {Workshop on Managing Technical Debt},
keywords = {1,2 paying off design,code smells,debt,design debt,god class,maintainability,refactoring,technical debt},
pages = {17--23},
title = {{Investigating the Impact of Design Debt on Software Quality}},
year = {2011}
}


